apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'java'

ext.nettyVersion = '4.0.26.Final'
ext {
    
    if (project_version =~ /-SNAPSHOT$/) {
        repository_url = "http://59.110.124.28:8081/nexus/content/repositories/snapshots/"
    } else {
        repository_url = "http://59.110.124.28:8081/nexus/content/repositories/releases/"
    }
}

configure(subprojects.findAll { it.name !='xxx' }) {

    apply plugin: 'eclipse'
    apply plugin: 'java'
    apply plugin: 'maven'

    group 'org.netsharp'
    version project_version
    apply plugin: 'eclipse-wtp'
    println it.name

    tasks.withType(AbstractCompile) {
        options.encoding = "UTF-8"
    }

    sourceSets {
        main {
            java {
                srcDirs = ['src/main/java']
            }
            resources {
                srcDirs = ['src/main/resources']
            }
        }
        test {
            java {
                srcDirs = ['src/test/java']
            }
            resources {
                srcDirs = ["src/test/resources"]
            }
        }
    }

    repositories {
        mavenLocal()

         maven {  
             name "aliyunmaven"  
             url "http://maven.aliyun.com/nexus/content/groups/public/"  
         }  
         
        mavenCentral()
    }

    //------------------
    //打包源代码
    //------------------
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives sourcesJar
    }

    //
    clean << {
        if (file('bin').exists()) {
            file('bin').deleteDir()
        }
    }

    /* Compiling */
    tasks.withType(AbstractCompile) {
        options.encoding = 'UTF-8'
        options.fork = true
        options.debug = true
        options.compilerArgs = ['-Xlint:all', '-Xlint:-options']
        onlyIf { JavaVersion.current().isJava8Compatible() }
        //onlyIf { JavaVersion.current().isJava6Compatible() }
    }

    //上传到nexus
    uploadArchives {
        repositories {
            mavenDeployer {
                repository(url: "$repository_url") {
                    authentication(userName: "admin", password: "gongsibao2015")
                }
                pom.version = "$project.version"
                pom.groupId = "$project.group"
            }

        }
    }
}

clean << {
    if (file('out').exists()) {
        file('out').deleteDir()
    }

    if (file('.metadata').exists()) {
        file('.metadata').deleteDir()
    }

    if (file('RemoteSystemsTempFiles').exists()) {
        file('RemoteSystemsTempFiles').deleteDir()
    }

    if (file('build').exists()) {
        file('build').deleteDir()
    }
}

