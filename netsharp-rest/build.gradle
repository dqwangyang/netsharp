apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

//sourceCompatibility = 1.8//指定编译编译.java文件的jdk版本

dependencies {
	
    compile project(':netsharp-core')
    
	compile group:'org.springframework.boot',name:'spring-boot-starter',version:'2.0.1.RELEASE'
	compile group:'org.springframework.boot',name:'spring-boot-starter-web',version:'2.0.1.RELEASE'
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-tomcat', version: '2.0.2.RELEASE'
	
	compile group: 'org.springframework.security.oauth', name: 'spring-security-oauth2', version: '2.0.2.RELEASE'

//            {
//                exclude module: "spring-boot-starter-tomcat"
//            }
//	compile(group:'org.springframework.boot',name:'spring-boot-starter-jetty',version:'2.0.1.RELEASE')

	testCompile('org.springframework.boot:spring-boot-starter-test')
    
    //compile group: 'org.jsoup', name: 'jsoup', version: '1.10.2'    
}

//---------------------------------
// gradle命令生成jar包
//---------------------------------

def libPath = "lib"

task copyJar(type:Copy){
    from configurations.runtime
    into ('build/libs/lib')
}

task release(type: Copy,dependsOn: [build,copyJar]) {
}

jar {
    manifest {
        attributes(
            "Main-Class": "org.netsharp.rest.NoticeMain",
            "Implementation-Title": "Gradle",
            "Class-Path": configurations.compile.collect { "$libPath/"+it.getName() }.join(' ')
        )
    }
}

buildscript {
	ext {
		springBootVersion = '2.0.1.RELEASE'
	}
	repositories {
        mavenLocal()

         maven {  
             name "aliyunmaven"  
             url "http://maven.aliyun.com/nexus/content/groups/public/"  
         }  
         
        mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}


sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
    test {
        java {
            srcDirs = ['src/test/java']
        }
        resources {
            srcDirs = ['src/test/resources']
        }
    }
}
